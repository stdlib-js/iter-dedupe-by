{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert-is-function';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport isIteratorLike from '@stdlib/assert-is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol-iterator';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which removes consecutive values that resolve to the same value according to a provided function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} [limit=1] - number of allowed consecutive duplicates\n* @param {Function} clbk - function which indicates whether an iterated value is a \"duplicate\"\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @throws {TypeError} `limit` argument must be a positive integer\n* @throws {TypeError} last argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array-to-iterator';\n*\n* function fcn( v ) {\n*     return v;\n* }\n*\n* var iter = iterDedupeBy( array2iterator( [ 1, 1, 2, 3, 3 ] ), fcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterDedupeBy( iterator, limit, clbk ) { // eslint-disable-line no-unused-vars\n\tvar count;\n\tvar sprev; // previous source iterated value\n\tvar dprev; // previous downstream iterated value\n\tvar iter;\n\tvar acc;\n\tvar FLG;\n\tvar fcn;\n\tvar N;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tfcn = arguments[ arguments.length-1 ];\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isPositiveInteger( limit ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', limit ) );\n\t\t}\n\t\tN = limit;\n\t} else {\n\t\tN = 1;\n\t}\n\tacc = NaN; // Note: we leverage the fact that `NaN` is not equal to anything, including itself, to handle initial condition\n\tcount = 0;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar out;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\ti += 1;\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tout = fcn( v.value, sprev, dprev, i, acc );\n\t\tif ( out === acc ) {\n\t\t\tsprev = v.value;\n\t\t\tcount += 1;\n\t\t\tif ( count > N ) {\n\t\t\t\t// Find the next \"unique\" value...\n\t\t\t\twhile ( out === acc ) {\n\t\t\t\t\tv = iterator.next();\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif ( v.done ) {\n\t\t\t\t\t\tFLG = true;\n\t\t\t\t\t\treturn v;\n\t\t\t\t\t}\n\t\t\t\t\tout = fcn( v.value, sprev, dprev, i, acc );\n\t\t\t\t\tsprev = v.value;\n\t\t\t\t}\n\t\t\t\tacc = out;\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tdprev = sprev;\n\t\t} else {\n\t\t\tsprev = v.value;\n\t\t\tdprev = sprev;\n\t\t\tacc = out;\n\t\t\tcount = 1;\n\t\t}\n\t\treturn {\n\t\t\t'value': dprev,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterDedupeBy( iterator[ iteratorSymbol ](), N, fcn );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterDedupeBy;\n"],"names":["iterDedupeBy","iterator","limit","clbk","count","sprev","dprev","iter","acc","FLG","fcn","N","i","isIteratorLike","TypeError","format","isFunction","arguments","length","isPositiveInteger","NaN","setReadOnly","next","end","iteratorSymbol","factory","out","v","done","value"],"mappings":";;6lBAgEA,SAASA,EAAcC,EAAUC,EAAOC,GACvC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,IAAMC,EAAgBZ,GACrB,MAAM,IAAIa,UAAWC,EAAQ,4FAA6Fd,IAG3H,IAAMe,EADNN,EAAMO,UAAWA,UAAUC,OAAO,IAEjC,MAAM,IAAIJ,UAAWC,EAAQ,mEAAoEL,IAElG,GAAKO,UAAUC,OAAS,EAAI,CAC3B,IAAMC,EAAmBjB,GACxB,MAAM,IAAIY,UAAWC,EAAQ,6EAA8Eb,IAE5GS,EAAIT,CACN,MACES,EAAI,EAeL,OAbAH,EAAMY,IACNhB,EAAQ,EACRQ,GAAK,EAILS,EADAd,EAAO,CAAA,EACY,OAAQe,GAC3BD,EAAad,EAAM,SAAUgB,GAGxBC,GAAkBR,EAAYf,EAAUuB,KAC5CH,EAAad,EAAMiB,EAAgBC,GAE7BlB,EAQP,SAASe,IACR,IAAII,EACAC,EACJ,GAAKlB,EACJ,MAAO,CACNmB,MAAQ,GAKV,GAFAD,EAAI1B,EAASqB,OACbV,GAAK,EACAe,EAAEC,KAEN,OADAnB,GAAM,EACCkB,EAGR,IADAD,EAAMhB,EAAKiB,EAAEE,MAAOxB,EAAOC,EAAOM,EAAGJ,MACxBA,EAAM,CAGlB,GAFAH,EAAQsB,EAAEE,OACVzB,GAAS,GACIO,EAAI,CAEhB,KAAQe,IAAQlB,GAAM,CAGrB,GAFAmB,EAAI1B,EAASqB,OACbV,GAAK,EACAe,EAAEC,KAEN,OADAnB,GAAM,EACCkB,EAERD,EAAMhB,EAAKiB,EAAEE,MAAOxB,EAAOC,EAAOM,EAAGJ,GACrCH,EAAQsB,EAAEE,KACV,CACDrB,EAAMkB,EACNtB,EAAQ,CACR,CACDE,EAAQD,CACX,MACGA,EAAQsB,EAAEE,MACVvB,EAAQD,EACRG,EAAMkB,EACNtB,EAAQ,EAET,MAAO,CACNyB,MAASvB,EACTsB,MAAQ,EAET,CASD,SAASL,EAAKM,GAEb,OADApB,GAAM,EACDQ,UAAUC,OACP,CACNW,MAASA,EACTD,MAAQ,GAGH,CACNA,MAAQ,EAET,CAQD,SAASH,IACR,OAAOzB,EAAcC,EAAUuB,KAAoBb,EAAGD,EACtD,CACF"}