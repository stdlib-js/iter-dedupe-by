{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isIteratorLike = require( '@stdlib/assert-is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which removes consecutive values that resolve to the same value according to a provided function.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} [limit=1] - number of allowed consecutive duplicates\n* @param {Function} clbk - function which indicates whether an iterated value is a \"duplicate\"\n* @throws {TypeError} must provide an iterator protocol-compliant object\n* @throws {TypeError} `limit` argument must be a positive integer\n* @throws {TypeError} last argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array-to-iterator' );\n*\n* function fcn( v ) {\n*     return v;\n* }\n*\n* var iter = iterDedupeBy( array2iterator( [ 1, 1, 2, 3, 3 ] ), fcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterDedupeBy( iterator, limit, clbk ) { // eslint-disable-line no-unused-vars\n\tvar count;\n\tvar sprev; // previous source iterated value\n\tvar dprev; // previous downstream iterated value\n\tvar iter;\n\tvar acc;\n\tvar FLG;\n\tvar fcn;\n\tvar N;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tfcn = arguments[ arguments.length-1 ];\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isPositiveInteger( limit ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', limit ) );\n\t\t}\n\t\tN = limit;\n\t} else {\n\t\tN = 1;\n\t}\n\tacc = NaN; // Note: we leverage the fact that `NaN` is not equal to anything, including itself, to handle initial condition\n\tcount = 0;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and a provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar out;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\ti += 1;\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tout = fcn( v.value, sprev, dprev, i, acc );\n\t\tif ( out === acc ) {\n\t\t\tsprev = v.value;\n\t\t\tcount += 1;\n\t\t\tif ( count > N ) {\n\t\t\t\t// Find the next \"unique\" value...\n\t\t\t\twhile ( out === acc ) {\n\t\t\t\t\tv = iterator.next();\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif ( v.done ) {\n\t\t\t\t\t\tFLG = true;\n\t\t\t\t\t\treturn v;\n\t\t\t\t\t}\n\t\t\t\t\tout = fcn( v.value, sprev, dprev, i, acc );\n\t\t\t\t\tsprev = v.value;\n\t\t\t\t}\n\t\t\t\tacc = out;\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tdprev = sprev;\n\t\t} else {\n\t\t\tsprev = v.value;\n\t\t\tdprev = sprev;\n\t\t\tacc = out;\n\t\t\tcount = 1;\n\t\t}\n\t\treturn {\n\t\t\t'value': dprev,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterDedupeBy( iterator[ iteratorSymbol ](), N, fcn );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterDedupeBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which removes consecutive values that resolve to the same value according to a provided function.\n*\n* @module @stdlib/iter-dedupe-by\n*\n* @example\n* var array2iterator = require( '@stdlib/array-to-iterator' );\n* var iterDedupeBy = require( '@stdlib/iter-dedupe-by' );\n*\n* function fcn( v ) {\n*     return v;\n* }\n*\n* var iter = iterDedupeBy( array2iterator( [ 1, 1, 2, 3, 3 ] ), fcn );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterDedupeBy = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterDedupeBy;\n"],"names":["setReadOnly","require$$0","isFunction","require$$1","isPositiveInteger","require$$2","isPrimitive","isIteratorLike","require$$3","iteratorSymbol","require$$4","format","require$$5","main","iterDedupeBy","iterator","limit","clbk","count","sprev","dprev","iter","acc","FLG","fcn","N","i","TypeError","arguments","length","NaN","next","end","factory","out","v","done","value","lib"],"mappings":";;oiBAsBA,IAAIA,EAAcC,EACdC,EAAaC,EACbC,EAAoBC,EAAgDC,YACpEC,EAAiBC,EACjBC,EAAiBC,EACjBC,EAASC,EAmKb,IAAAC,EA9HA,SAASC,EAAcC,EAAUC,EAAOC,GACvC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,IAAMnB,EAAgBQ,GACrB,MAAM,IAAIY,UAAWhB,EAAQ,4FAA6FI,IAG3H,IAAMb,EADNsB,EAAMI,UAAWA,UAAUC,OAAO,IAEjC,MAAM,IAAIF,UAAWhB,EAAQ,mEAAoEa,IAElG,GAAKI,UAAUC,OAAS,EAAI,CAC3B,IAAMzB,EAAmBY,GACxB,MAAM,IAAIW,UAAWhB,EAAQ,6EAA8EK,IAE5GS,EAAIT,OAEJS,EAAI,EAeL,OAbAH,EAAMQ,IACNZ,EAAQ,EACRQ,GAAK,EAIL1B,EADAqB,EAAO,GACY,OAAQU,GAC3B/B,EAAaqB,EAAM,SAAUW,GAGxBvB,GAAkBP,EAAYa,EAAUN,KAC5CT,EAAaqB,EAAMZ,EAAgBwB,GAE7BZ,EAQP,SAASU,IACR,IAAIG,EACAC,EACJ,GAAKZ,EACJ,MAAO,CACNa,MAAQ,GAKV,GAFAD,EAAIpB,EAASgB,OACbL,GAAK,EACAS,EAAEC,KAEN,OADAb,GAAM,EACCY,EAGR,IADAD,EAAMV,EAAKW,EAAEE,MAAOlB,EAAOC,EAAOM,EAAGJ,MACxBA,EAAM,CAGlB,GAFAH,EAAQgB,EAAEE,OACVnB,GAAS,GACIO,EAAI,CAEhB,KAAQS,IAAQZ,GAAM,CAGrB,GAFAa,EAAIpB,EAASgB,OACbL,GAAK,EACAS,EAAEC,KAEN,OADAb,GAAM,EACCY,EAERD,EAAMV,EAAKW,EAAEE,MAAOlB,EAAOC,EAAOM,EAAGJ,GACrCH,EAAQgB,EAAEE,MAEXf,EAAMY,EACNhB,EAAQ,EAETE,EAAQD,OAERA,EAAQgB,EAAEE,MACVjB,EAAQD,EACRG,EAAMY,EACNhB,EAAQ,EAET,MAAO,CACNmB,MAASjB,EACTgB,MAAQ,GAWV,SAASJ,EAAKK,GAEb,OADAd,GAAM,EACDK,UAAUC,OACP,CACNQ,MAASA,EACTD,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAASH,IACR,OAAOnB,EAAcC,EAAUN,KAAoBgB,EAAGD,KChIxDc,EALmBrC"}